#!/bin/bash

# Script ki·ªÉm tra credentials file tr√™n VPS
# Ch·∫°y script n√†y tr√™n VPS ƒë·ªÉ ki·ªÉm tra file service-account.json

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# Function to print colored output
print_success() {
    echo -e "${GREEN}[‚úì]${NC} $1"
}

print_error() {
    echo -e "${RED}[‚úó]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[!]${NC} $1"
}

print_info() {
    echo -e "${BLUE}[i]${NC} $1"
}

echo "üîç Ki·ªÉm tra credentials file tr√™n VPS..."
echo "================================================"

# ƒê∆∞·ªùng d·∫´n file credentials
CREDENTIALS_PATH="/home/discord-bot/discord-booking-bot/credentials/service-account.json"
ENV_FILE="/home/discord-bot/discord-booking-bot/.env"

# 1. Ki·ªÉm tra th∆∞ m·ª•c credentials c√≥ t·ªìn t·∫°i kh√¥ng
print_info "1. Ki·ªÉm tra th∆∞ m·ª•c credentials..."
if [ -d "/home/discord-bot/discord-booking-bot/credentials" ]; then
    print_success "Th∆∞ m·ª•c credentials t·ªìn t·∫°i"
    ls -la /home/discord-bot/discord-booking-bot/credentials/
else
    print_error "Th∆∞ m·ª•c credentials kh√¥ng t·ªìn t·∫°i"
    print_info "T·∫°o th∆∞ m·ª•c credentials..."
    sudo -u discord-bot mkdir -p /home/discord-bot/discord-booking-bot/credentials
    print_success "ƒê√£ t·∫°o th∆∞ m·ª•c credentials"
fi

echo ""

# 2. Ki·ªÉm tra file service-account.json c√≥ t·ªìn t·∫°i kh√¥ng
print_info "2. Ki·ªÉm tra file service-account.json..."
if [ -f "$CREDENTIALS_PATH" ]; then
    print_success "File service-account.json t·ªìn t·∫°i"
    
    # Ki·ªÉm tra quy·ªÅn file
    print_info "   Quy·ªÅn file:"
    ls -la "$CREDENTIALS_PATH"
    
    # Ki·ªÉm tra k√≠ch th∆∞·ªõc file
    FILE_SIZE=$(stat -c%s "$CREDENTIALS_PATH")
    print_info "   K√≠ch th∆∞·ªõc file: $FILE_SIZE bytes"
    
    if [ $FILE_SIZE -eq 0 ]; then
        print_error "   File r·ªóng!"
    else
        print_success "   File c√≥ n·ªôi dung"
    fi
    
else
    print_error "File service-account.json kh√¥ng t·ªìn t·∫°i"
    print_warning "B·∫°n c·∫ßn upload file n√†y t·ª´ m√°y local"
    echo ""
    print_info "C√°ch upload file:"
    echo "   scp /path/to/your/service-account.json username@your-vps-ip:/home/discord-bot/discord-booking-bot/credentials/"
    echo "   ho·∫∑c"
    echo "   rsync -avz /path/to/your/service-account.json username@your-vps-ip:/home/discord-bot/discord-booking-bot/credentials/"
fi

echo ""

# 3. Ki·ªÉm tra n·ªôi dung file JSON (n·∫øu t·ªìn t·∫°i)
if [ -f "$CREDENTIALS_PATH" ]; then
    print_info "3. Ki·ªÉm tra format JSON..."
    
    # Ki·ªÉm tra xem file c√≥ ph·∫£i JSON h·ª£p l·ªá kh√¥ng
    if python3 -m json.tool "$CREDENTIALS_PATH" > /dev/null 2>&1; then
        print_success "File JSON h·ª£p l·ªá"
        
        # Hi·ªÉn th·ªã c√°c field quan tr·ªçng (kh√¥ng hi·ªÉn th·ªã private_key)
        print_info "   C√°c field quan tr·ªçng:"
        python3 -c "
import json
try:
    with open('$CREDENTIALS_PATH', 'r') as f:
        data = json.load(f)
    
    important_fields = ['type', 'project_id', 'private_key_id', 'client_email', 'client_id', 'auth_uri', 'token_uri']
    
    for field in important_fields:
        if field in data:
            if field == 'private_key_id':
                print(f'   - {field}: {data[field][:20]}...')
            else:
                print(f'   - {field}: {data[field]}')
        else:
            print(f'   - {field}: MISSING')
            
except Exception as e:
    print(f'   L·ªói ƒë·ªçc file: {e}')
"
    else
        print_error "File JSON kh√¥ng h·ª£p l·ªá"
        print_info "   Ki·ªÉm tra n·ªôi dung file:"
        head -5 "$CREDENTIALS_PATH"
    fi
else
    print_warning "3. B·ªè qua ki·ªÉm tra JSON - file kh√¥ng t·ªìn t·∫°i"
fi

echo ""

# 4. Ki·ªÉm tra bi·∫øn m√¥i tr∆∞·ªùng trong .env
print_info "4. Ki·ªÉm tra file .env..."
if [ -f "$ENV_FILE" ]; then
    print_success "File .env t·ªìn t·∫°i"
    
    # Ki·ªÉm tra bi·∫øn GOOGLE_CREDENTIALS_PATH
    if grep -q "GOOGLE_CREDENTIALS_PATH" "$ENV_FILE"; then
        CRED_PATH_IN_ENV=$(grep "GOOGLE_CREDENTIALS_PATH" "$ENV_FILE" | cut -d'=' -f2)
        print_info "   GOOGLE_CREDENTIALS_PATH trong .env: $CRED_PATH_IN_ENV"
        
        if [ "$CRED_PATH_IN_ENV" = "$CREDENTIALS_PATH" ]; then
            print_success "   ƒê∆∞·ªùng d·∫´n trong .env ƒë√∫ng"
        else
            print_error "   ƒê∆∞·ªùng d·∫´n trong .env kh√¥ng kh·ªõp"
            print_info "   N√™n l√†: $CREDENTIALS_PATH"
        fi
    else
        print_error "   Kh√¥ng t√¨m th·∫•y GOOGLE_CREDENTIALS_PATH trong .env"
    fi
else
    print_error "File .env kh√¥ng t·ªìn t·∫°i"
fi

echo ""

# 5. Ki·ªÉm tra quy·ªÅn truy c·∫≠p
print_info "5. Ki·ªÉm tra quy·ªÅn truy c·∫≠p..."
if [ -f "$CREDENTIALS_PATH" ]; then
    # Ki·ªÉm tra user discord-bot c√≥ th·ªÉ ƒë·ªçc file kh√¥ng
    if sudo -u discord-bot test -r "$CREDENTIALS_PATH"; then
        print_success "User discord-bot c√≥ th·ªÉ ƒë·ªçc file"
    else
        print_error "User discord-bot kh√¥ng th·ªÉ ƒë·ªçc file"
        print_info "   S·ª≠a quy·ªÅn file:"
        echo "   sudo chown discord-bot:discord-bot $CREDENTIALS_PATH"
        echo "   sudo chmod 600 $CREDENTIALS_PATH"
    fi
else
    print_warning "B·ªè qua ki·ªÉm tra quy·ªÅn - file kh√¥ng t·ªìn t·∫°i"
fi

echo ""

# 6. Test k·∫øt n·ªëi Google API (n·∫øu c√≥ Python dependencies)
print_info "6. Test k·∫øt n·ªëi Google API..."
if [ -f "$CREDENTIALS_PATH" ] && [ -f "/home/discord-bot/discord-booking-bot/venv/bin/python" ]; then
    print_info "   Th·ª≠ k·∫øt n·ªëi Google Sheets API..."
    
    sudo -u discord-bot bash -c "
    cd /home/discord-bot/discord-booking-bot
    source venv/bin/activate
    python3 -c '
import os
import sys
sys.path.append(\".\")

try:
    from google.oauth2 import service_account
    from googleapiclient.discovery import build
    
    # Load credentials
    credentials = service_account.Credentials.from_service_account_file(
        \"$CREDENTIALS_PATH\",
        scopes=[\"https://www.googleapis.com/auth/spreadsheets\"]
    )
    
    # Test connection
    service = build(\"sheets\", \"v4\", credentials=credentials)
    print(\"‚úì K·∫øt n·ªëi Google Sheets API th√†nh c√¥ng\")
    
except ImportError as e:
    print(f\"‚úó Thi·∫øu th∆∞ vi·ªán: {e}\")
    print(\"C√†i ƒë·∫∑t: pip install google-auth google-auth-oauthlib google-auth-httplib2 google-api-python-client\")
except Exception as e:
    print(f\"‚úó L·ªói k·∫øt n·ªëi: {e}\")
'
    " 2>/dev/null || print_warning "   Kh√¥ng th·ªÉ test API (c√≥ th·ªÉ thi·∫øu dependencies)"
else
    print_warning "   B·ªè qua test API - thi·∫øu file ho·∫∑c venv"
fi

echo ""
echo "================================================"
print_info "T√≥m t·∫Øt k·∫øt qu·∫£ ki·ªÉm tra:"

# T√≥m t·∫Øt
if [ -f "$CREDENTIALS_PATH" ]; then
    FILE_SIZE=$(stat -c%s "$CREDENTIALS_PATH")
    if [ $FILE_SIZE -gt 0 ]; then
        print_success "File credentials.json: OK"
    else
        print_error "File credentials.json: R·ªóng"
    fi
else
    print_error "File credentials.json: Kh√¥ng t·ªìn t·∫°i"
fi

if [ -f "$ENV_FILE" ]; then
    if grep -q "GOOGLE_CREDENTIALS_PATH.*$CREDENTIALS_PATH" "$ENV_FILE"; then
        print_success "C·∫•u h√¨nh .env: OK"
    else
        print_error "C·∫•u h√¨nh .env: Sai ƒë∆∞·ªùng d·∫´n"
    fi
else
    print_error "File .env: Kh√¥ng t·ªìn t·∫°i"
fi

echo ""
print_info "Script ho√†n th√†nh!"
