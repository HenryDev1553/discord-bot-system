"""
Email Manager s·ª≠ d·ª•ng Google Apps Script Web App
Thay th·∫ø ho√†n to√†n SMTP ƒë·ªÉ tr√°nh b·ªã block ports tr√™n VPS
"""

import requests
import logging
from typing import Dict, Optional, Any
from config import Config

logger = logging.getLogger(__name__)

class EmailManager:
    """
    Email Manager s·ª≠ d·ª•ng Google Apps Script Web App
    G·ª≠i email th√¥ng qua POST request ƒë·∫øn Apps Script ƒë·ªÉ tr√°nh b·ªã block SMTP ports
    """
    
    def __init__(self, appscript_url: Optional[str] = None):
        """
        Kh·ªüi t·∫°o Email Manager
        
        Args:
            appscript_url (str, optional): URL c·ªßa Apps Script Web App
        """
        self.appscript_url = appscript_url or getattr(Config, 'APPSCRIPT_WEBHOOK_URL', None)
        
        if not self.appscript_url:
            logger.warning("APPSCRIPT_WEBHOOK_URL not configured. Email sending will be disabled.")
        
        # Timeout settings
        self.timeout = getattr(Config, 'APPSCRIPT_TIMEOUT', 30)
        self.max_retries = getattr(Config, 'APPSCRIPT_MAX_RETRIES', 3)
    
    def send_mail_via_appscript(
        self, 
        to: str, 
        subject: str, 
        body: str, 
        html_body: Optional[str] = None,
        sender_name: Optional[str] = None
    ) -> bool:
        """
        G·ª≠i email th√¥ng qua Google Apps Script
        
        Args:
            to (str): Email ng∆∞·ªùi nh·∫≠n
            subject (str): Ti√™u ƒë·ªÅ email
            body (str): N·ªôi dung text thu·∫ßn
            html_body (str, optional): N·ªôi dung HTML
            sender_name (str, optional): T√™n ng∆∞·ªùi g·ª≠i
            
        Returns:
            bool: True n·∫øu g·ª≠i th√†nh c√¥ng, False n·∫øu th·∫•t b·∫°i
        """
        if not self.appscript_url:
            logger.error("AppScript URL not configured. Cannot send email.")
            return False
            
        if not to or not subject or not body:
            logger.error("Missing required email parameters: to, subject, or body")
            return False
        
        # T·∫°o payload g·ª≠i ƒë·∫øn Apps Script
        payload = {
            'to': to,
            'subject': subject,
            'body': body,
            'htmlBody': html_body,
            'senderName': sender_name or getattr(Config, 'COMPANY_NAME', 'Discord Booking System')
        }
        
        # Headers cho request
        headers = {
            'Content-Type': 'application/json',
            'User-Agent': 'Discord-Booking-Bot/1.0'
        }
        
        # Th·ª≠ g·ª≠i v·ªõi retry mechanism
        for attempt in range(self.max_retries):
            try:
                logger.info(f"Sending email to {to} via AppScript (attempt {attempt + 1}/{self.max_retries})")
                
                response = requests.post(
                    self.appscript_url,
                    json=payload,
                    headers=headers,
                    timeout=self.timeout
                )
                
                # Ki·ªÉm tra response
                if response.status_code == 200:
                    response_data = response.json()
                    
                    if response_data.get('success', False):
                        logger.info(f"Email sent successfully to {to} via AppScript")
                        return True
                    else:
                        error_msg = response_data.get('error', 'Unknown error from AppScript')
                        logger.error(f"AppScript returned error: {error_msg}")
                        
                else:
                    logger.error(f"AppScript request failed with status {response.status_code}: {response.text}")
                    
            except requests.exceptions.Timeout:
                logger.warning(f"Request to AppScript timed out (attempt {attempt + 1})")
                
            except requests.exceptions.ConnectionError:
                logger.warning(f"Connection error to AppScript (attempt {attempt + 1})")
                
            except requests.exceptions.RequestException as e:
                logger.error(f"Request error to AppScript: {e}")
                
            except Exception as e:
                logger.error(f"Unexpected error sending email via AppScript: {e}")
            
            # N·∫øu kh√¥ng ph·∫£i l·∫ßn th·ª≠ cu·ªëi, ch·ªù m·ªôt ch√∫t tr∆∞·ªõc khi retry
            if attempt < self.max_retries - 1:
                import time
                time.sleep(2 ** attempt)  # Exponential backoff
        
        logger.error(f"Failed to send email to {to} after {self.max_retries} attempts")
        return False
    
    def send_confirmation_email(self, booking_data: Dict[str, Any]) -> bool:
        """
        G·ª≠i email x√°c nh·∫≠n booking
        
        Args:
            booking_data (dict): Th√¥ng tin booking
            
        Returns:
            bool: True n·∫øu g·ª≠i th√†nh c√¥ng
        """
        try:
            subject, html_body, text_body = self._create_email_template('confirmation', booking_data)
            
            return self.send_mail_via_appscript(
                to=booking_data.get('email'),
                subject=subject,
                body=text_body,
                html_body=html_body,
                sender_name=getattr(Config, 'COMPANY_NAME', 'Discord Booking System')
            )
            
        except Exception as e:
            logger.error(f"Error sending confirmation email: {e}")
            return False
    
    def send_cancellation_email(self, booking_data: Dict[str, Any]) -> bool:
        """
        G·ª≠i email h·ªßy booking
        
        Args:
            booking_data (dict): Th√¥ng tin booking
            
        Returns:
            bool: True n·∫øu g·ª≠i th√†nh c√¥ng
        """
        try:
            subject, html_body, text_body = self._create_email_template('cancellation', booking_data)
            
            return self.send_mail_via_appscript(
                to=booking_data.get('email'),
                subject=subject,
                body=text_body,
                html_body=html_body,
                sender_name=getattr(Config, 'COMPANY_NAME', 'Discord Booking System')
            )
            
        except Exception as e:
            logger.error(f"Error sending cancellation email: {e}")
            return False
    
    def send_error_email(self, booking_data: Dict[str, Any]) -> bool:
        """
        G·ª≠i email th√¥ng b√°o l·ªói booking
        
        Args:
            booking_data (dict): Th√¥ng tin booking
            
        Returns:
            bool: True n·∫øu g·ª≠i th√†nh c√¥ng
        """
        try:
            subject, html_body, text_body = self._create_email_template('error', booking_data)
            
            return self.send_mail_via_appscript(
                to=booking_data.get('email'),
                subject=subject,
                body=text_body,
                html_body=html_body,
                sender_name=getattr(Config, 'COMPANY_NAME', 'Discord Booking System')
            )
            
        except Exception as e:
            logger.error(f"Error sending error notification email: {e}")
            return False

    def _create_email_template(self, template_type: str, booking_data: Dict[str, Any]):
        """
        T·∫°o template email d·ª±a tr√™n lo·∫°i th√¥ng b√°o
        
        Args:
            template_type (str): 'confirmation', 'cancellation', ho·∫∑c 'error'
            booking_data (dict): Th√¥ng tin booking
        
        Returns:
            tuple: (subject, html_body, text_body)
        """
        import pytz
        from datetime import datetime
        
        customer_name = booking_data.get('name', 'Qu√Ω kh√°ch')
        booking_date = booking_data.get('date', '')
        
        # Format th·ªùi gian t·ª´ startTime v√† endTime
        start_time = booking_data.get('startTime', '')
        end_time = booking_data.get('endTime', '')
        booking_time = f"({start_time} - {end_time})" if start_time and end_time else booking_data.get('time', '')
        
        room = booking_data.get('room', '')
        
        # L·∫•y th·ªùi gian hi·ªán t·∫°i
        timezone = pytz.timezone(getattr(Config, 'TIMEZONE', 'Asia/Ho_Chi_Minh'))
        now = datetime.now(timezone)
        formatted_time = now.strftime("%d/%m/%Y l√∫c %H:%M")
        
        if template_type == 'confirmation':
            subject = f"‚úÖ X√°c Nh·∫≠n ƒê·∫∑t L·ªãch - {room} - {booking_date} {booking_time}"
            
            html_body = f"""
            <html>
            <body style="font-family: Arial, sans-serif; line-height: 1.6; color: #333;">
                <div style="max-width: 600px; margin: 0 auto; padding: 20px;">
                    <div style="background: linear-gradient(135deg, #4CAF50, #45a049); color: white; padding: 20px; border-radius: 10px 10px 0 0; text-align: center;">
                        <h1 style="margin: 0; font-size: 24px;">‚úÖ ƒê·∫∑t l·ªãch ƒë√£ ƒë∆∞·ª£c x√°c nh·∫≠n!</h1>
                    </div>
                    
                    <div style="background: #f9f9f9; padding: 30px; border-radius: 0 0 10px 10px; border: 1px solid #ddd;">
                        <p>K√≠nh ch√†o <strong>{customer_name}</strong>,</p>
                        
                        <p>Ch√∫ng t√¥i xin th√¥ng b√°o l·ªãch ƒë·∫∑t c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c <strong style="color: #4CAF50;">X√ÅC NH·∫¨N TH√ÄNH C√îNG</strong>!</p>
                        
                        <div style="background: white; padding: 20px; border-radius: 8px; border-left: 4px solid #4CAF50; margin: 20px 0;">
                            <h3 style="color: #4CAF50; margin-top: 0;">üìã Th√¥ng tin ƒë·∫∑t l·ªãch:</h3>
                            <p><strong>üìÖ Ng√†y:</strong> {booking_date}</p>
                            <p><strong>‚è∞ Gi·ªù:</strong> {booking_time}</p>
                            <p><strong>üè¢ Ph√≤ng/ƒê·ªãa ƒëi·ªÉm:</strong> {room}</p>
                            <p><strong>‚úÖ Tr·∫°ng th√°i:</strong> <span style="color: #4CAF50; font-weight: bold;">ƒê√£ x√°c nh·∫≠n</span></p>
                            <p><strong>üìÜ Th·ªùi gian x√°c nh·∫≠n:</strong> {formatted_time}</p>
                        </div>
                        
                        <div style="background: #e8f5e8; padding: 15px; border-radius: 8px; margin: 20px 0;">
                            <h4 style="color: #2e7d32; margin-top: 0;">üí° L∆∞u √Ω quan tr·ªçng:</h4>
                            <ul style="margin: 0; padding-left: 20px;">
                                <li>Vui l√≤ng c√≥ m·∫∑t ƒë√∫ng gi·ªù ƒë√£ ƒë·∫∑t</li>
                                <li>N·∫øu c√≥ thay ƒë·ªïi, li√™n h·ªá tr∆∞·ªõc √≠t nh·∫•t 2 gi·ªù</li>
                                <li>Mang theo gi·∫•y t·ªù t√πy th√¢n khi ƒë·∫øn</li>
                            </ul>
                        </div>
                        
                        <div style="text-align: center; margin: 30px 0;">
                            <p>N·∫øu b·∫°n c·∫ßn h·ªó tr·ª£, vui l√≤ng li√™n h·ªá:</p>
                            <p><strong>üìß Email:</strong> {getattr(Config, 'COMPANY_EMAIL', 'contact@company.com')}</p>
                            <p><strong>üìû ƒêi·ªán tho·∫°i:</strong> {getattr(Config, 'COMPANY_PHONE', '+84 123 456 789')}</p>
                        </div>
                        
                        <hr style="border: none; border-top: 1px solid #ddd; margin: 30px 0;">
                        
                        <p style="text-align: center; color: #666; font-size: 14px;">
                            C·∫£m ∆°n b·∫°n ƒë√£ tin t∆∞·ªüng s·ª≠ d·ª•ng d·ªãch v·ª• c·ªßa <strong>{getattr(Config, 'COMPANY_NAME', 'Your Company')}</strong>!<br>
                            Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông, vui l√≤ng kh√¥ng reply.
                        </p>
                    </div>
                </div>
            </body>
            </html>
            """
            
            text_body = f"""
            ‚úÖ ƒê·∫∂T L·ªäCH ƒê√É ƒê∆Ø·ª¢C X√ÅC NH·∫¨N!
            
            K√≠nh ch√†o {customer_name},
            
            L·ªãch ƒë·∫∑t c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c X√ÅC NH·∫¨N TH√ÄNH C√îNG!
            
            TH√îNG TIN ƒê·∫∂T L·ªäCH:
            üìÖ Ng√†y: {booking_date}
            ‚è∞ Gi·ªù: {booking_time}
            üè¢ Ph√≤ng: {room}
            ‚úÖ Tr·∫°ng th√°i: ƒê√£ x√°c nh·∫≠n
            üìÜ Th·ªùi gian x√°c nh·∫≠n: {formatted_time}
            
            L·ªúI NH·∫ÆC:
            - Vui l√≤ng c√≥ m·∫∑t ƒë√∫ng gi·ªù ƒë√£ ƒë·∫∑t
            - N·∫øu c√≥ thay ƒë·ªïi, li√™n h·ªá tr∆∞·ªõc √≠t nh·∫•t 2 gi·ªù
            - Mang theo gi·∫•y t·ªù t√πy th√¢n khi ƒë·∫øn
            
            LI√äN H·ªÜ H·ªñ TR·ª¢:
            üìß Email: {getattr(Config, 'COMPANY_EMAIL', 'contact@company.com')}
            üìû ƒêi·ªán tho·∫°i: {getattr(Config, 'COMPANY_PHONE', '+84 123 456 789')}
            
            C·∫£m ∆°n b·∫°n ƒë√£ tin t∆∞·ªüng s·ª≠ d·ª•ng d·ªãch v·ª• c·ªßa {getattr(Config, 'COMPANY_NAME', 'Your Company')}!
            """
        
        elif template_type == 'cancellation':
            subject = f"‚ùå Th√¥ng b√°o h·ªßy l·ªãch - {booking_date} {booking_time}"
            
            html_body = f"""
            <html>
            <body style="font-family: Arial, sans-serif; line-height: 1.6; color: #333;">
                <div style="max-width: 600px; margin: 0 auto; padding: 20px;">
                    <div style="background: linear-gradient(135deg, #f44336, #d32f2f); color: white; padding: 20px; border-radius: 10px 10px 0 0; text-align: center;">
                        <h1 style="margin: 0; font-size: 24px;">‚ùå L·ªãch ƒë·∫∑t ƒë√£ b·ªã h·ªßy</h1>
                    </div>
                    
                    <div style="background: #f9f9f9; padding: 30px; border-radius: 0 0 10px 10px; border: 1px solid #ddd;">
                        <p>K√≠nh ch√†o <strong>{customer_name}</strong>,</p>
                        
                        <p>Ch√∫ng t√¥i xin th√¥ng b√°o l·ªãch ƒë·∫∑t c·ªßa b·∫°n ƒë√£ b·ªã <strong style="color: #f44336;">H·ª¶Y</strong>.</p>
                        
                        <div style="background: white; padding: 20px; border-radius: 8px; border-left: 4px solid #f44336; margin: 20px 0;">
                            <h3 style="color: #f44336; margin-top: 0;">üìã Th√¥ng tin l·ªãch ƒë√£ h·ªßy:</h3>
                            <p><strong>üìÖ Ng√†y:</strong> {booking_date}</p>
                            <p><strong>‚è∞ Gi·ªù:</strong> {booking_time}</p>
                            <p><strong>üè¢ Ph√≤ng/ƒê·ªãa ƒëi·ªÉm:</strong> {room}</p>
                            <p><strong>‚ùå Tr·∫°ng th√°i:</strong> <span style="color: #f44336; font-weight: bold;">ƒê√£ h·ªßy</span></p>
                            <p><strong>üìÜ Th·ªùi gian h·ªßy:</strong> {formatted_time}</p>
                        </div>
                        
                        <div style="background: #ffebee; padding: 15px; border-radius: 8px; margin: 20px 0;">
                            <h4 style="color: #c62828; margin-top: 0;">üìù L√Ω do h·ªßy l·ªãch:</h4>
                            <p>L·ªãch ƒë·∫∑t c√≥ th·ªÉ b·ªã h·ªßy do m·ªôt trong c√°c l√Ω do sau:</p>
                            <ul style="margin: 0; padding-left: 20px;">
                                <li>Xung ƒë·ªôt th·ªùi gian v·ªõi l·ªãch kh√°c</li>
                                <li>S·ª± c·ªë k·ªπ thu·∫≠t ho·∫∑c b·∫£o tr√¨</li>
                                <li>Y√™u c·∫ßu t·ª´ ph√≠a kh√°ch h√†ng</li>
                                <li>L√Ω do b·∫•t kh·∫£ kh√°ng kh√°c</li>
                            </ul>
                        </div>
                        
                        <div style="background: #e3f2fd; padding: 15px; border-radius: 8px; margin: 20px 0;">
                            <h4 style="color: #1976d2; margin-top: 0;">üîÑ ƒê·∫∑t l·∫°i l·ªãch m·ªõi:</h4>
                            <p>B·∫°n c√≥ th·ªÉ ƒë·∫∑t l·∫°i l·ªãch m·ªõi b·∫±ng c√°ch:</p>
                            <ul style="margin: 0; padding-left: 20px;">
                                <li>ƒêi·ªÅn form ƒë·∫∑t l·ªãch tr·ª±c tuy·∫øn</li>
                                <li>G·ªçi ƒëi·ªán tho·∫°i ƒë·∫øn hotline</li>
                                <li>G·ª≠i email y√™u c·∫ßu h·ªó tr·ª£</li>
                            </ul>
                        </div>
                        
                        <div style="text-align: center; margin: 30px 0;">
                            <p>Ch√∫ng t√¥i xin l·ªói v√¨ s·ª± b·∫•t ti·ªán n√†y. ƒê·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£:</p>
                            <p><strong>üìß Email:</strong> {getattr(Config, 'COMPANY_EMAIL', 'contact@company.com')}</p>
                            <p><strong>üìû ƒêi·ªán tho·∫°i:</strong> {getattr(Config, 'COMPANY_PHONE', '+84 123 456 789')}</p>
                        </div>
                        
                        <hr style="border: none; border-top: 1px solid #ddd; margin: 30px 0;">
                        
                        <p style="text-align: center; color: #666; font-size: 14px;">
                            C·∫£m ∆°n b·∫°n ƒë√£ hi·ªÉu v√† ·ªßng h·ªô <strong>{getattr(Config, 'COMPANY_NAME', 'Your Company')}</strong>!<br>
                            Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông, vui l√≤ng kh√¥ng reply.
                        </p>
                    </div>
                </div>
            </body>
            </html>
            """
            
            text_body = f"""
            ‚ùå L·ªäCH ƒê·∫∂T ƒê√É B·ªä H·ª¶Y
            
            K√≠nh ch√†o {customer_name},
            
            L·ªãch ƒë·∫∑t c·ªßa b·∫°n ƒë√£ b·ªã H·ª¶Y.
            
            TH√îNG TIN L·ªäCH ƒê√É H·ª¶Y:
            üìÖ Ng√†y: {booking_date}
            ‚è∞ Gi·ªù: {booking_time}
            üè¢ Ph√≤ng: {room}
            ‚ùå Tr·∫°ng th√°i: ƒê√£ h·ªßy
            üìÜ Th·ªùi gian h·ªßy: {formatted_time}
            
            L√ù DO H·ª¶Y L·ªäCH:
            L·ªãch ƒë·∫∑t c√≥ th·ªÉ b·ªã h·ªßy do:
            - Xung ƒë·ªôt th·ªùi gian v·ªõi l·ªãch kh√°c
            - S·ª± c·ªë k·ªπ thu·∫≠t ho·∫∑c b·∫£o tr√¨
            - Y√™u c·∫ßu t·ª´ ph√≠a kh√°ch h√†ng
            - L√Ω do b·∫•t kh·∫£ kh√°ng kh√°c
            
            ƒê·∫∂T L·∫†I L·ªäCH M·ªöI:
            - ƒêi·ªÅn form ƒë·∫∑t l·ªãch tr·ª±c tuy·∫øn
            - G·ªçi ƒëi·ªán tho·∫°i ƒë·∫øn hotline
            - G·ª≠i email y√™u c·∫ßu h·ªó tr·ª£
            
            LI√äN H·ªÜ H·ªñ TR·ª¢:
            üìß Email: {getattr(Config, 'COMPANY_EMAIL', 'contact@company.com')}
            üìû ƒêi·ªán tho·∫°i: {getattr(Config, 'COMPANY_PHONE', '+84 123 456 789')}
            
            Xin l·ªói v√¨ s·ª± b·∫•t ti·ªán. C·∫£m ∆°n s·ª± th√¥ng c·∫£m c·ªßa b·∫°n!
            """
        
        else:  # error
            subject = f"‚ö†Ô∏è Th√¥ng b√°o l·ªói th√¥ng tin ƒë·∫∑t l·ªãch - {booking_date} {booking_time}"
            
            html_body = f"""
            <html>
            <body style="font-family: Arial, sans-serif; line-height: 1.6; color: #333;">
                <div style="max-width: 600px; margin: 0 auto; padding: 20px;">
                    <div style="background: linear-gradient(135deg, #ff9800, #f57c00); color: white; padding: 20px; border-radius: 10px 10px 0 0; text-align: center;">
                        <h1 style="margin: 0; font-size: 24px;">‚ö†Ô∏è L·ªói th√¥ng tin ƒë·∫∑t l·ªãch</h1>
                    </div>
                    
                    <div style="background: #f9f9f9; padding: 30px; border-radius: 0 0 10px 10px; border: 1px solid #ddd;">
                        <p>K√≠nh ch√†o <strong>{customer_name}</strong>,</p>
                        
                        <p>Ch√∫ng t√¥i nh·∫≠n th·∫•y c√≥ <strong style="color: #ff9800;">L·ªñI TH√îNG TIN</strong> trong form ƒë·∫∑t l·ªãch c·ªßa b·∫°n.</p>
                        
                        <div style="background: white; padding: 20px; border-radius: 8px; border-left: 4px solid #ff9800; margin: 20px 0;">
                            <h3 style="color: #ff9800; margin-top: 0;">üìã Th√¥ng tin l·ªãch ƒë√£ ƒëi·ªÅn:</h3>
                            <p><strong>üìÖ Ng√†y:</strong> {booking_date}</p>
                            <p><strong>‚è∞ Gi·ªù:</strong> {booking_time}</p>
                            <p><strong>üè¢ Ph√≤ng/ƒê·ªãa ƒëi·ªÉm:</strong> {room}</p>
                            <p><strong>‚ö†Ô∏è Tr·∫°ng th√°i:</strong> <span style="color: #ff9800; font-weight: bold;">L·ªói th√¥ng tin</span></p>
                            <p><strong>üìÜ Th·ªùi gian ph√°t hi·ªán l·ªói:</strong> {formatted_time}</p>
                        </div>
                        
                        <div style="background: #fff3e0; padding: 15px; border-radius: 8px; margin: 20px 0;">
                            <h4 style="color: #e65100; margin-top: 0;">üîç C√°c l·ªói th∆∞·ªùng g·∫∑p:</h4>
                            <ul style="margin: 0; padding-left: 20px;">
                                <li><strong>Ng√†y th√°ng nƒÉm:</strong> ƒê·ªãnh d·∫°ng kh√¥ng ƒë√∫ng ho·∫∑c ng√†y kh√¥ng h·ª£p l·ªá</li>
                                <li><strong>Gi·ªù b·∫Øt ƒë·∫ßu:</strong> Sai ƒë·ªãnh d·∫°ng gi·ªù (VD: 25:00) ho·∫∑c kh√¥ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß</li>
                                <li><strong>Gi·ªù k·∫øt th√∫c:</strong> Sai ƒë·ªãnh d·∫°ng ho·∫∑c tr∆∞·ªõc gi·ªù b·∫Øt ƒë·∫ßu</li>
                                <li><strong>Kho·∫£ng th·ªùi gian:</strong> Qu√° ng·∫Øn ho·∫∑c qu√° d√†i</li>
                                <li><strong>Th√¥ng tin thi·∫øu:</strong> M·ªôt s·ªë tr∆∞·ªùng b·∫Øt bu·ªôc ch∆∞a ƒëi·ªÅn</li>
                            </ul>
                        </div>
                        
                        <div style="background: #e8f5e8; padding: 15px; border-radius: 8px; margin: 20px 0;">
                            <h4 style="color: #2e7d32; margin-top: 0;">‚úÖ C√°ch kh·∫Øc ph·ª•c:</h4>
                            <p><strong>1. Ki·ªÉm tra l·∫°i th√¥ng tin:</strong></p>
                            <ul style="margin: 0; padding-left: 20px;">
                                <li>Ng√†y: DD/MM/YYYY (VD: 15/07/2025)</li>
                                <li>Gi·ªù: HH:MM (VD: 14:30)</li>
                                <li>ƒê·∫£m b·∫£o gi·ªù k·∫øt th√∫c sau gi·ªù b·∫Øt ƒë·∫ßu</li>
                            </ul>
                            
                            <p><strong>2. ƒê·∫∑t l·∫°i l·ªãch v·ªõi th√¥ng tin ch√≠nh x√°c:</strong></p>
                            <ul style="margin: 0; padding-left: 20px;">
                                <li>ƒêi·ªÅn l·∫°i form ƒë·∫∑t l·ªãch v·ªõi th√¥ng tin ƒë√∫ng</li>
                                <li>Ki·ªÉm tra k·ªπ tr∆∞·ªõc khi g·ª≠i</li>
                                <li>Ho·∫∑c g·ªçi ƒëi·ªán tho·∫°i ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£ tr·ª±c ti·∫øp</li>
                            </ul>
                        </div>
                        
                        <div style="text-align: center; margin: 30px 0;">
                            <p>N·∫øu b·∫°n c·∫ßn h·ªó tr·ª£, vui l√≤ng li√™n h·ªá:</p>
                            <p><strong>üìß Email:</strong> {getattr(Config, 'COMPANY_EMAIL', 'contact@company.com')}</p>
                            <p><strong>üìû ƒêi·ªán tho·∫°i:</strong> {getattr(Config, 'COMPANY_PHONE', '+84 123 456 789')}</p>
                        </div>
                        
                        <hr style="border: none; border-top: 1px solid #ddd; margin: 30px 0;">
                        
                        <p style="text-align: center; color: #666; font-size: 14px;">
                            C·∫£m ∆°n b·∫°n ƒë√£ s·ª≠ d·ª•ng d·ªãch v·ª• c·ªßa <strong>{getattr(Config, 'COMPANY_NAME', 'Your Company')}</strong>!<br>
                            Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông, vui l√≤ng kh√¥ng reply.
                        </p>
                    </div>
                </div>
            </body>
            </html>
            """
            
            text_body = f"""
            ‚ö†Ô∏è L·ªñI TH√îNG TIN ƒê·∫∂T L·ªäCH
            
            K√≠nh ch√†o {customer_name},
            
            Ch√∫ng t√¥i nh·∫≠n th·∫•y c√≥ L·ªñI TH√îNG TIN trong form ƒë·∫∑t l·ªãch c·ªßa b·∫°n.
            
            TH√îNG TIN L·ªäCH ƒê√É ƒêI·ªÄN:
            üìÖ Ng√†y: {booking_date}
            ‚è∞ Gi·ªù: {booking_time}
            üè¢ Ph√≤ng: {room}
            ‚ö†Ô∏è Tr·∫°ng th√°i: L·ªói th√¥ng tin
            üìÜ Th·ªùi gian ph√°t hi·ªán l·ªói: {formatted_time}
            
            C√ÅC L·ªñI TH∆Ø·ªúNG G·∫∂P:
            - Ng√†y th√°ng nƒÉm: ƒê·ªãnh d·∫°ng kh√¥ng ƒë√∫ng ho·∫∑c ng√†y kh√¥ng h·ª£p l·ªá
            - Gi·ªù b·∫Øt ƒë·∫ßu: Sai ƒë·ªãnh d·∫°ng gi·ªù (VD: 25:00) ho·∫∑c kh√¥ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß
            - Gi·ªù k·∫øt th√∫c: Sai ƒë·ªãnh d·∫°ng ho·∫∑c tr∆∞·ªõc gi·ªù b·∫Øt ƒë·∫ßu
            
            C√ÅCH KH·∫ÆC PH·ª§C:
            1. Ki·ªÉm tra l·∫°i th√¥ng tin:
               - Ng√†y: DD/MM/YYYY (VD: 15/07/2025)
               - Gi·ªù: HH:MM (VD: 14:30)
               - ƒê·∫£m b·∫£o gi·ªù k·∫øt th√∫c sau gi·ªù b·∫Øt ƒë·∫ßu
               - ƒêi·ªÅn ƒë·∫ßy ƒë·ªß t·∫•t c·∫£ c√°c tr∆∞·ªùng b·∫Øt bu·ªôc
            
            2. ƒê·∫∑t l·∫°i l·ªãch v·ªõi th√¥ng tin ch√≠nh x√°c:
               - ƒêi·ªÅn l·∫°i form ƒë·∫∑t l·ªãch v·ªõi th√¥ng tin ƒë√∫ng
               - Ki·ªÉm tra k·ªπ tr∆∞·ªõc khi g·ª≠i
               - Ho·∫∑c g·ªçi ƒëi·ªán tho·∫°i ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£ tr·ª±c ti·∫øp
            
            LI√äN H·ªÜ H·ªñ TR·ª¢:
            üìß Email: {getattr(Config, 'COMPANY_EMAIL', 'contact@company.com')}
            üìû ƒêi·ªán tho·∫°i: {getattr(Config, 'COMPANY_PHONE', '+84 123 456 789')}
            
            C·∫£m ∆°n b·∫°n ƒë√£ s·ª≠ d·ª•ng d·ªãch v·ª• c·ªßa {getattr(Config, 'COMPANY_NAME', 'Your Company')}!
            """
        
        return subject, html_body, text_body
    
    def test_connection(self) -> bool:
        """
        Test k·∫øt n·ªëi ƒë·∫øn Apps Script Web App
        
        Returns:
            bool: True n·∫øu k·∫øt n·ªëi th√†nh c√¥ng
        """
        if not self.appscript_url:
            logger.error("AppScript URL not configured")
            return False
        
        test_payload = {
            'to': 'test@example.com',
            'subject': 'Test Email Connection',
            'body': 'This is a test email to verify Apps Script connection.',
            'test': True  # Flag ƒë·ªÉ Apps Script bi·∫øt ƒë√¢y l√† test, kh√¥ng g·ª≠i email th·∫≠t
        }
        
        try:
            response = requests.post(
                self.appscript_url,
                json=test_payload,
                headers={'Content-Type': 'application/json'},
                timeout=self.timeout
            )
            
            if response.status_code == 200:
                logger.info("Apps Script connection test successful")
                return True
            else:
                logger.error(f"Apps Script connection test failed: {response.status_code}")
                return False
                
        except Exception as e:
            logger.error(f"Apps Script connection test error: {e}")
            return False
